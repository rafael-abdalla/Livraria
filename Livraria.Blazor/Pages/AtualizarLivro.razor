@page "/livro/{id}"

@using Livraria.Application.DTOs.Request
@using Livraria.Domain.Repositories
@using System.Text.Json

@inject ILivroRepository repository;
@inject MessageService _message
@inject NavigationManager NavManager

<br />

<Breadcrumb>
	<BreadcrumbItem>Livro</BreadcrumbItem>
	<BreadcrumbItem>Atualizar</BreadcrumbItem>
</Breadcrumb>

<br />

<Form Loading="loading" Model="@model" 
      LabelColSpan="8"
      WrapperColSpan="8"
      OnFinish="OnFinish" 
      OnFinishFailed="OnFinishFailed">
    <FormItem Label="Título" >
        <Input @bind-Value="@context.Titulo"/>
    </FormItem>
    <FormItem Label="Autor" >
        <Input @bind-Value="@context.Autor"/>
    </FormItem>
    <FormItem Label="Quantidade" >
        <Input @bind-Value="@context.Quantidade"/>
    </FormItem>
    <FormItem Label="Preço" >
        <Input @bind-Value="@context.Preco"/>
    </FormItem>
    <FormItem Label="Data de publicação">
        <DatePicker @bind-Value="@context.DataPublicacao" Format="dd/MM/yyyy" />
    </FormItem>
    <FormItem WrapperColOffset="8" WrapperColSpan="16">
        <Button Type="@ButtonType.Primary" HtmlType="submit">
            Atualizar
        </Button>
        <Button HtmlType="button" OnClick="@Reset">
            Limpar
        </Button>
    </FormItem>
</Form>

@code {
    [Parameter] public string Id { get; set; }

    private AtualizarLivroRequest model = new AtualizarLivroRequest();

    protected override async Task OnInitializedAsync()
    {
        var response = await repository.ObterPorId(Guid.Parse(Id));
        model = AtualizarLivroRequest.ConverterParaRequest(response!);
    }

    private async void OnFinish(EditContext editContext)
    {
        try
        {
            loading = true;
            await repository.Atualizar(AtualizarLivroRequest.ConverterParaEntidade(model));
            await _message.Success("Atualizado com sucesso");
            NavManager.NavigateTo($"/procura");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            await _message.Error("Falha ao atualizar");
        } finally
        {
            loading = false;
            StateHasChanged();
        }
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(model)}");
    }

    private void Reset() =>
        model = new AtualizarLivroRequest();

    bool loading = false;
}
